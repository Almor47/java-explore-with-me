{
  "info": {
    "_postman_id": "49a700db-7c7a-4a00-b002-61bb6b843bb3",
    "name": "feature_comments",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "26763178"
  },
  "item": [
    {
      "name": "Создание первого пользователя",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(201);  \r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});\r",
              "pm.test(\"Test user 'id' field\", function () {\r",
              "    var jsonData = pm.response.json();\r",
              "    pm.expect(jsonData).to.have.property('id');\r",
              "    pm.expect(jsonData.id, '\"id\" must be 136').to.eql(136);\r",
              "});\r",
              "pm.test(\"Test user 'name' field\", function () {\r",
              "    var jsonData = pm.response.json();\r",
              "    pm.expect(jsonData).to.have.property('email');\r",
              "    pm.expect(jsonData.name, '\"name\" must be \"Ivan Ivanov\"').to.eql('Ivan Ivanov');\r",
              "});\r",
              "pm.test(\"Test user 'email' field\", function () {\r",
              "    var jsonData = pm.response.json();\r",
              "    pm.expect(jsonData).to.have.property('email');\r",
              "    pm.expect(jsonData.email, '\"email\" must be \"Ivanov@gmail.com\"').to.eql('Ivanov@gmail.com');\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"name\":\"Ivan Ivanov\",\r\n    \"email\":\"Ivanov@gmail.com\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/admin/users",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "users"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Создание второго пользователя",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(201);  \r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});\r",
              "pm.test(\"Test user 'id' field\", function () {\r",
              "    var jsonData = pm.response.json();\r",
              "    pm.expect(jsonData).to.have.property('id');\r",
              "    pm.expect(jsonData.id, '\"id\" must be 137').to.eql(137);\r",
              "});\r",
              "pm.test(\"Test user 'name' field\", function () {\r",
              "    var jsonData = pm.response.json();\r",
              "    pm.expect(jsonData).to.have.property('email');\r",
              "    pm.expect(jsonData.name, '\"name\" must be \"Petrov Petr\"').to.eql('Petrov Petr');\r",
              "});\r",
              "pm.test(\"Test user 'email' field\", function () {\r",
              "    var jsonData = pm.response.json();\r",
              "    pm.expect(jsonData).to.have.property('email');\r",
              "    pm.expect(jsonData.email, '\"email\" must be \"Petrov@gmail.com\"').to.eql('Petrov@gmail.com');\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"name\":\"Petrov Petr\",\r\n    \"email\":\"Petrov@gmail.com\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/admin/users",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "users"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Создание категории",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(201);  \r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});\r",
              "\r",
              "pm.test(\"Test category 'name' field\", function () {\r",
              "    var jsonData = pm.response.json();\r",
              "    pm.expect(jsonData).to.have.property('name');\r",
              "    pm.expect(jsonData.name, '\"name\" must be \"sport\"').to.eql('sport');\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\"name\":\"sport\"}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/admin/categories",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "categories"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Создание 1 события",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(201);  \r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          },
          {
            "key": "Accept",
            "value": "application/json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"annotation\":\"Аннотация события 1.\",\"category\":1,\"description\":\"Крутое описание события номер 1\",\"eventDate\":\"2023-08-23 00:44:40\",\"location\":{\"lat\":-54.764,\"lon\":-173.6945},\"paid\":\"true\",\"participantLimit\":\"904\",\"requestModeration\":\"false\",\"title\":\"Сплав по горной реке.\"}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/users/:userId/events",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            ":userId",
            "events"
          ],
          "variable": [
            {
              "key": "userId",
              "value": "2"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Создание 2 события",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(201);  \r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\"annotation\":\"Аннотация события 2.\",\"category\":1,\"description\":\"Крутое описание события номер 2\",\"eventDate\":\"2023-08-23 00:44:40\",\"location\":{\"lat\":-52.764,\"lon\":-73.6945},\"paid\":\"true\",\"participantLimit\":\"22\",\"requestModeration\":\"false\",\"title\":\"Игра в футбол.\"}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/users/:userId/events",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            ":userId",
            "events"
          ],
          "variable": [
            {
              "key": "userId",
              "value": "2"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Перевод события 2 в состояние опубликовано",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(200);  \r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});\r",
              "\r",
              "pm.test(\"Test event 'state' field\", function () {\r",
              "    var jsonData = pm.response.json();\r",
              "    pm.expect(jsonData).to.have.property('state');\r",
              "    pm.expect(jsonData.state, '\"state\" must be \"PUBLISHED\"').to.eql('PUBLISHED');\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\"stateAction\":\"PUBLISH_EVENT\"}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/admin/events/:eventId",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "events",
            ":eventId"
          ],
          "variable": [
            {
              "key": "eventId",
              "value": "107"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Добавление комментария к опубликованному событию 2",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(201);  \r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});\r",
              "\r",
              "pm.test(\"Test user 'id' field\", function () {\r",
              "    var jsonData = pm.response.json();\r",
              "    pm.expect(jsonData).to.have.property('id');\r",
              "    pm.expect(jsonData.id, '\"id\" must be 1').to.eql(1);\r",
              "});\r",
              "pm.test(\"Test comment 'text' field\", function () {\r",
              "    var jsonData = pm.response.json();\r",
              "    pm.expect(jsonData).to.have.property('text');\r",
              "    pm.expect(jsonData.text, '\"text\" must be \"Прекрасная идея давно не играл в футбол\"').to.eql('Прекрасная идея давно не играл в футбол');\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"text\":\"Прекрасная идея давно не играл в футбол\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/users/:userId/comments/:eventId",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            ":userId",
            "comments",
            ":eventId"
          ],
          "variable": [
            {
              "key": "userId",
              "value": "136"
            },
            {
              "key": "eventId",
              "value": "107"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Добавление комментария к неопубликованному событию 1",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 409 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(409);  \r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"text\":\"Хочу поплавать в холодной воде\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/users/:userId/comments/:eventId",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            ":userId",
            "comments",
            ":eventId"
          ],
          "variable": [
            {
              "key": "userId",
              "value": "136"
            },
            {
              "key": "eventId",
              "value": "106"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Добавление еще одного комментария к опубликованному событию 2",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(201);  \r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});\r",
              "\r",
              "pm.test(\"Test user 'id' field\", function () {\r",
              "    var jsonData = pm.response.json();\r",
              "    pm.expect(jsonData).to.have.property('id');\r",
              "    pm.expect(jsonData.id, '\"id\" must be 2').to.eql(2);\r",
              "});\r",
              "pm.test(\"Test comment 'text' field\", function () {\r",
              "    var jsonData = pm.response.json();\r",
              "    pm.expect(jsonData).to.have.property('text');\r",
              "    pm.expect(jsonData.text, '\"text\" must be \"20 человек классссссссс\"').to.eql('20 человек классссссссс');\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"text\":\"20 человек классссссссс\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/users/:userId/comments/:eventId",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            ":userId",
            "comments",
            ":eventId"
          ],
          "variable": [
            {
              "key": "userId",
              "value": "136"
            },
            {
              "key": "eventId",
              "value": "107"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Просмотр комментариев к событию 2",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(200);  \r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});\r",
              "\r",
              "pm.test(\"Test list user response\", function () {\r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "    var jsonData = pm.response.json();\r",
              "    pm.expect(jsonData.length, 'List length must be 2').to.eql(2);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/comments/events/:eventId",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "comments",
            "events",
            ":eventId"
          ],
          "variable": [
            {
              "key": "eventId",
              "value": "107"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Просмотр комментариев к событию 1",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(200);  \r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});\r",
              "\r",
              "pm.test(\"Test list user response\", function () {\r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "    var jsonData = pm.response.json();\r",
              "    pm.expect(jsonData.length, 'List length must be 0').to.eql(0);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/comments/events/:eventId",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "comments",
            "events",
            ":eventId"
          ],
          "variable": [
            {
              "key": "eventId",
              "value": "106"
            }
          ]
        }
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080",
      "type": "string"
    }
  ]
}